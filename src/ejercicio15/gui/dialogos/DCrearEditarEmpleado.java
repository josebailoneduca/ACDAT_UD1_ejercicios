/*
LICENCIA JOSE JAVIER BO
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
Lista de paquetes:
 */
package ejercicio15.gui.dialogos;

import ejercicio15.dto.Empleado;
import ejercicio15.logica.Control;
import javax.swing.JOptionPane;

/**
 * Dialogo para crear y editar empleados
 * @author Jose Javier Bailon Ortiz
 */
public class DCrearEditarEmpleado extends javax.swing.JDialog {

    /**
     * Posibles usos del dialogo
     */
    public enum Tipo {
        EDITAR,
        CREAR
    }

    //tipo de uso del dialogo (crear,editar)
    private Tipo tipo;

    /**
     * Constructor
     * @param parent
     * @param modal
     * @param empleado Empleado a editar o null si es para crear
     * @param tipo Tipo de uso (crear,editar)
     */
    public DCrearEditarEmpleado(java.awt.Frame parent, boolean modal, Empleado empleado, DCrearEditarEmpleado.Tipo tipo) {
        super(parent, modal);
        initComponents();
        
        //guardar referencia al tipo de uso
        this.tipo = tipo;
        
        //inicializar segun el tipo de uso
        switch (tipo) {
            case EDITAR ->
                inicializaParaEditar(empleado);
            case CREAR ->
                inicializaParaCrear();
            default ->
                throw new AssertionError();
        }
    }

    /**
     * Inicializacion para la creacion. Oculta el campo id y ajusta el texto
     * del boto de guardar
     */
    private void inicializaParaCrear() {
        this.lbId.setVisible(false);
        this.inputId.setVisible(false);
        this.lbTitulo.setText("AÑADIR EMPLEADO");
    }

    /**
     * Inicializacion para la edicion. Rellena los campos y ajusta el texto
     * del boto de guardar
     * @param empleado  Empleado a usar para rellenar los campos
     */
    private void inicializaParaEditar(Empleado empleado) {
        inputId.setText("" + empleado.getId());
        inputNombre.setText(empleado.getNombre());
        inputApellidos.setText(empleado.getApellidos());
        inputSueldo.setValue(empleado.getSueldo());
        this.lbTitulo.setText("EDITAR EMPLEADO");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCampos = new javax.swing.JPanel();
        lbId = new javax.swing.JLabel();
        inputId = new javax.swing.JTextField();
        lbNombre = new javax.swing.JLabel();
        inputNombre = new javax.swing.JTextField();
        lbApellidos = new javax.swing.JLabel();
        inputApellidos = new javax.swing.JTextField();
        lbSueldo = new javax.swing.JLabel();
        inputSueldo = new javax.swing.JSpinner();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lbTitulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        lbId.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbId.setText("ID");

        inputId.setEditable(false);

        lbNombre.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbNombre.setText("NOMBRE");

        lbApellidos.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbApellidos.setText("APELLIDOS");

        lbSueldo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbSueldo.setText("SUELDO");

        inputSueldo.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        javax.swing.GroupLayout panelCamposLayout = new javax.swing.GroupLayout(panelCampos);
        panelCampos.setLayout(panelCamposLayout);
        panelCamposLayout.setHorizontalGroup(
            panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCamposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelCamposLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lbApellidos, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))
                    .addComponent(lbSueldo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(inputNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                    .addComponent(inputId, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputApellidos)
                    .addComponent(inputSueldo))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        panelCamposLayout.setVerticalGroup(
            panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCamposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbId)
                    .addComponent(inputId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNombre)
                    .addComponent(inputNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbApellidos)
                    .addComponent(inputApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSueldo)
                    .addComponent(inputSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lbTitulo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitulo.setText("Empleado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnGuardar)
                .addGap(52, 52, 52)
                .addComponent(btnCancelar)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(lbTitulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelCampos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnGuardar))
                .addGap(0, 17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Acciones para el boton de guardar. Recoge los datos y dependiendo del 
     * tipo de uso ordena a Control la creacion de un nuemo empleado o la actualizacion
     * de uno existente
     * @param evt 
     */
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        
        //recoger valores y validar
        int id = -1;
        String nombre;
        String apellidos;
        int sueldo = 0;
        //id
        try {
            id = Integer.parseInt(this.inputId.getText());
        } catch (NumberFormatException e) {
        }
        //nombre
        nombre = inputNombre.getText();
        if (nombre.length() < 1) {
            JOptionPane.showMessageDialog(this, "No puede dejar el nombre vacío", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (nombre.length() > Empleado.limiteNombre) {
            int opcion = JOptionPane.showConfirmDialog(this, "El nombre se recortará a " + Empleado.limiteNombre + " caracteres. ¿Está de acuerdo?", "Aviso", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (opcion == JOptionPane.NO_OPTION) {
                return;
            }
        }
        //apellidos
        apellidos = inputApellidos.getText();
        if (apellidos.length() < 1) {
            JOptionPane.showMessageDialog(this, "No puede dejar  el apellido vacío", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (apellidos.length() > Empleado.limiteApellidos) {
            int opcion = JOptionPane.showConfirmDialog(this, "El apellido se recortará a " + Empleado.limiteApellidos + " caracteres. ¿Está de acuerdo?", "Aviso", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (opcion == JOptionPane.NO_OPTION) {
                return;
            }
        }
        //sueldo
        try {
            sueldo = (int) this.inputSueldo.getValue();
        } catch (Exception e) {
        }
        if (sueldo < 1) {
            JOptionPane.showMessageDialog(this, "El sueldo no es válido.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        //crear empleado
        Empleado e = new Empleado(id, nombre, apellidos, sueldo, new int[Empleado.limiteTrabajos]);

        //actuar segun el tipo de uso ordenando a control editar o crear
        switch (this.tipo) {
            case EDITAR ->
                Control.editarEmpleado(e);
            case CREAR ->
                Control.agregarEmpleado(e);
            default ->
                throw new AssertionError();
        }
        
        //aviso de resultado y cierre
        JOptionPane.showMessageDialog(this, this.tipo == Tipo.CREAR ? "Empleado añadido" : "Empleado editado");
        this.dispose();
    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * Cerrar diaologo
     * @param evt 
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JTextField inputApellidos;
    private javax.swing.JTextField inputId;
    private javax.swing.JTextField inputNombre;
    private javax.swing.JSpinner inputSueldo;
    private javax.swing.JLabel lbApellidos;
    private javax.swing.JLabel lbId;
    private javax.swing.JLabel lbNombre;
    private javax.swing.JLabel lbSueldo;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JPanel panelCampos;
    // End of variables declaration//GEN-END:variables

}//fin DTrabajo
